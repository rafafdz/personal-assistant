name: Deploy to VPS

on:
  push:
    branches:
      - main  # Trigger deployment on push to main branch
  workflow_dispatch:  # Allow manual trigger from GitHub UI

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          # Decode base64 SSH key and save it
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          
          # Set SSH port (default to 22 if not specified)
          SSH_PORT="${{ secrets.VPS_PORT }}"
          if [ -z "$SSH_PORT" ]; then
            SSH_PORT=22
          fi
          echo "SSH_PORT=$SSH_PORT" >> $GITHUB_ENV
          
          # Add VPS to known hosts to avoid SSH verification prompt
          ssh-keyscan -p $SSH_PORT -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts || true

      - name: Create deployment archive
        run: |
          # Create a zip file excluding unnecessary files
          echo "Creating deployment archive..."
          zip -r deploy.zip . \
            -x "node_modules/*" \
            -x ".git/*" \
            -x "dist/*" \
            -x ".github/*" \
            -x "*.log" \
            -x ".env*" \
            -x "docker-compose.dev.yml"
          
          ls -lh deploy.zip
          echo "Archive created successfully"

      - name: Transfer files to VPS
        run: |
          echo "Transferring files to VPS..."
          echo "Using SSH port: $SSH_PORT"
          
          # Create app directory on VPS if it doesn't exist
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -p $SSH_PORT \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
            "mkdir -p /home/debian/personal-assistant"
          
          # Transfer the deployment archive
          scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -P $SSH_PORT \
            deploy.zip \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/home/debian/personal-assistant/

      - name: Extract and deploy on VPS
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -p $SSH_PORT \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'ENDSSH'
          
          set -e  # Exit on error
          
          cd /home/debian/personal-assistant
          
          # Install unzip if not present
          if ! command -v unzip &> /dev/null; then
            echo "Installing unzip..."
            sudo apt-get update -qq
            sudo apt-get install -y unzip
          fi
          
          echo "Extracting deployment archive..."
          unzip -o deploy.zip
          rm deploy.zip
          
          echo "Making deploy script executable..."
          chmod +x deploy.sh

          echo "Triggering deployment script in background..."
          nohup ./deploy.sh > deploy.log 2>&1 &

          echo "Deployment triggered! Build is running on server."
          echo "To check status, SSH to server and run: tail -f /home/debian/personal-assistant/deploy.log"
          ENDSSH

      - name: Cleanup
        if: always()
        run: |
          # Remove sensitive files
          rm -f ~/.ssh/deploy_key
          rm -f deploy.zip

